/*获取元素的样式
 *getStyle(oUl,'width')
 */
	function getStyle(obj, attr)
	{	//IE、Opera
		if(obj.currentStyle)
		{
			return obj.currentStyle[attr];
		}
		else
		{       //FF、chrome、safari
			return getComputedStyle(obj, false)[attr];
		}
	}


JSON.parse()和JSON.stringify() 
	parse用于从一个字符串中解析出json对象,如
	var str = '{"name":"huangxiaojian","age":"23"}'
	结果：
	JSON.parse(str)
	Object
			age: "23"
			name: "huangxiaojian"
			__proto__: Object
	注意：单引号写在{}外，每个属性名都必须用双引号，否则会抛出异常。

	stringify()用于从一个对象解析出字符串，如
	var
	 a = {a:1,b:2}
	结果：
	JSON.stringify(a)
	"{"a":1,"b":2}"
	
js中的call方法和apply方法  ---两者都可以改变this的指向
	function show(a,b){
		console.log('this是：'+this+',a是：'+a+',b是:'+b);
	}			
	show(12,5)                 //this是：[object Window],a是：12,b是:5
	show.call('abc',12,5);     //this是：abc,a是：12,b是:5
	show.apply('abc',[12,5]);  //this是：abc,a是：12,b是:5
	
array.splice() 影响原来的数组
array.slice() 不影响原来的数组	
	var arr1 = [1,2,3,4,5,6];
	var arr2 = arr1.splice(0,3);
	console.log(arr1)  //[4, 5, 6] 
	console.log(arr2)  //[1, 2, 3]
	
	var arr1 = [1,2,3,4,5,6];
	var arr2 = arr1.slice(0,3);
	console.log(arr1)  //[1,2,3,4,5,6]
	console.log(arr2)  //[1, 2, 3]
